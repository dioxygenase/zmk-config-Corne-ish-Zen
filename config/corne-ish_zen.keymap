
/*
*
* Copyright (c) 2021 lowprokb.ca
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWE 0
#define SYM 1
#define NAV 2
#define NUM 3
#define MOU 4
#define FUN 5

&lt { quick_tap_ms = <300>; };

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <30>;
            key-positions = <30 31>;
            bindings = <&kp ESC>;
            layers = <0>;
        };
        combo_caps {
            timeout-ms = <30>;
            key-positions = <31 32>;
            bindings = <&kp CAPS>;
            layers = <0>;
        };
    };
    
    behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping_term_ms = <300>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
   
            shm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "sHOMEROW_MODS";
                #binding-cells = <2>;
                tapping_term_ms = <100>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWE";
            bindings = <
&kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P 
&hm LGUI A      &hm LALT S      &hm LCTL D      &hm LSFT F      &kp G           &kp H           &hm RSFT J      &hm RCTL K      &hm LALT L      &hm RGUI SEMICOLON 
&kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &kp CMMA        &kp DOT         &kp FSLH  
                                                &lt 2 DEL       &lt 1 BKSP      &shm LSFT SQT    &lt 3 TAB       &lt 4 SPC       &lt 5 ENTER
            >;
        };

        sym_layer {
            label = "SYM";
            bindings = <
&kp LBRC &kp RBRC  &kp LPAR  &kp RPAR  &kp DQT          &kp KP_MINUS    &kp AMPS        &kp PIPE        &kp BSLH   &kp SLASH
&kp LGUI &kp LALT &kp LCTRL &kp LSHFT &kp SQT &kp KP_PLUS &kp DLLR &kp PRCNT &kp CARET &kp ASTERISK
&kp LESS_THAN &kp GREATER_THAN &kp LBKT &kp RBKT &kp GRAVE &kp EQUAL &kp EXCL &kp AT &kp HASH &kp QMARK
                                                        &kp LS(P)       &none          &kp P   &kp TILDE       &kp UNDERSCORE  &kp KP_DOT
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
&bt BT_CLR      &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &kp LG(LS(Z))   &kp LG(V)       &kp LG(C)       &kp LG(X)       &kp LG(Z)        
&kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &bt BT_SEL 4    &kp CAPS        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW    &kp LEFT_ARROW
&kp LT      &kp GT          &kp LBKT        &kp RBKT        &kp GRAVE       &kp EQUAL       &kp EXCL        &kp AT     &kp HASH        &kp QUESTION
                                                &none          &none          &none          &kp K_PREV      &kp K_PP        &kp K_NEXT
            >;
        };

        num_layer {
            label = "NUM";
            bindings = <
&kp LBRC        &kp RBRC        &kp LPAR        &kp RPAR        &kp DQT         &kp KP_MINUS    &kp KP_N7       &kp KP_N8       &kp KP_N9       &kp SLASH
&kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &kp SQT         &kp KP_PLUS     &kp KP_N4       &kp KP_N5       &kp KP_N6       &kp ASTERISK
&kp LT          &kp GT          &kp LBKT        &kp RBKT        &kp GRAVE       &kp EQUAL       &kp KP_N1       &kp KP_N2       &kp KP_N3       &kp QUESTION  
                                                &kp LS(P)       &kp UNDERSCORE  &kp P   &trans          &kp KP_N0       &kp KP_DOT
            >;
        };

         mou_layer {
            label = "MOU";
            bindings = <
&none           &none           &none           &none           &none   &none   &none   &none   &none   &none
&kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &none   &none   &none   &none   &none   &none
&none           &none           &none           &none           &none   &none   &none   &none   &none   &none
                                                &trans          &trans          &trans  &trans  &trans  &trans
            >;
        };
        
 fun_layer {
            label = "FUN";
            bindings = <
&kp F13         &kp F14         &kp F15         &kp F16         &kp PSCRN       &kp F13 &kp F7  &kp F8  &kp F9  &kp F12
&kp LGUI        &kp LALT        &kp LCTRL       &kp LSHFT       &kp F18         &kp F13 &kp F4  &kp F5  &kp F6  &kp F11
&kp F22         &kp RALT        &kp F21         &kp F20         &kp PAUSE_BREAK &kp F13 &kp F1  &kp F2  &kp F3  &kp F10 
                                                &trans          &trans          &trans          &trans  &trans  &trans
            >;
        };
    };
};
